[1mdiff --git a/Rpg.Mobile.App/Game/Battling/Components/BattleUnitComponent.cs b/Rpg.Mobile.App/Game/Battling/Components/BattleUnitComponent.cs[m
[1mindex ca3c363..1bc2236 100644[m
[1m--- a/Rpg.Mobile.App/Game/Battling/Components/BattleUnitComponent.cs[m
[1m+++ b/Rpg.Mobile.App/Game/Battling/Components/BattleUnitComponent.cs[m
[36m@@ -23,7 +23,7 @@[m [mpublic class BattleUnitComponent : SpriteComponentBase[m
         State = state;[m
 [m
         HealthBar = AddChild(new BattleUnitHealthBarComponent(State));[m
[31m-        HealthBar.MoveTo(-10f, Sprite.Height - HealthBar.Bounds.Height + 10f);[m
[32m+[m[32m        HealthBar.Position = new(-10f, Sprite.Height - HealthBar.Bounds.Height + 10f);[m
     }[m
 }[m
 [m
[1mdiff --git a/Rpg.Mobile.App/Game/Battling/Scenes/BattleGridScene.cs b/Rpg.Mobile.App/Game/Battling/Scenes/BattleGridScene.cs[m
[1mindex 5517f9b..b114d6e 100644[m
[1m--- a/Rpg.Mobile.App/Game/Battling/Scenes/BattleGridScene.cs[m
[1m+++ b/Rpg.Mobile.App/Game/Battling/Scenes/BattleGridScene.cs[m
[36m@@ -50,12 +50,12 @@[m [mpublic class BattleGridScene : SceneBase[m
 [m
         foreach (var (unit, index) in _battleUnits.Where(x => x.State.PlayerId == 0).Select((x, i) => (x, i)))[m
         {[m
[31m-            unit.MoveTo(_grid.GetPositionForTile(1, (index * 2) + 1));[m
[32m+[m[32m            unit.Position = _grid.GetPositionForTile(1, (index * 2) + 1);[m
         }[m
 [m
         foreach (var (unit, index) in _battleUnits.Where(x => x.State.PlayerId == 1).Select((x, i) => (x, i)))[m
         {[m
[31m-            unit.MoveTo(_grid.GetPositionForTile(9, (index * 2) + 1));[m
[32m+[m[32m            unit.Position = _grid.GetPositionForTile(9, (index * 2) + 1);[m
         }[m
 [m
         ActiveCamera.Offset = new PointF(-10f, -30f);[m
[36m@@ -91,7 +91,7 @@[m [mpublic class BattleGridScene : SceneBase[m
     public override void Update(float deltaTime)[m
     {[m
         if (_movingUnit is not null)[m
[31m-            _battleUnits[0].MoveTo(_movingUnit.Advance(deltaTime));[m
[32m+[m[32m            _battleUnits[0].Position = _movingUnit.Advance(deltaTime);[m
 [m
         if (_cameraMove is not null)[m
             ActiveCamera.Offset = _cameraMove.Advance(deltaTime);[m
[1mdiff --git a/Rpg.Mobile.GameSdk/Component.cs b/Rpg.Mobile.GameSdk/Component.cs[m
[1mindex 4b41490..9be8a5c 100644[m
[1m--- a/Rpg.Mobile.GameSdk/Component.cs[m
[1m+++ b/Rpg.Mobile.GameSdk/Component.cs[m
[36m@@ -25,6 +25,7 @@[m [mpublic interface IComponent : IUpdateComponent, IRenderComponent[m
 [m
     bool IgnoreCamera { get; }[m
     RectF AbsoluteBounds { get; }[m
[32m+[m[32m    PointF Position { get; set; }[m
 [m
     // TODO: Remove the set[m
     IComponent? Parent { get; set; }[m
[36m@@ -33,14 +34,17 @@[m [mpublic interface IComponent : IUpdateComponent, IRenderComponent[m
     void OnTouchUp(IEnumerable<PointF> touches);[m
     IComponent RemoveChild(IComponent child);[m
     void SetParent(IComponent? parent);[m
[31m-    void MoveTo(float x, float y);[m
 }[m
 [m
 public abstract class ComponentBase : IComponent[m
 {[m
     public IComponent? Parent { get; set; }[m
     public RectF Bounds { get; protected set; }[m
[31m-    public PointF Position => Bounds.Location;[m
[32m+[m[32m    public PointF Position[m
[32m+[m[32m    {[m
[32m+[m[32m        get => Bounds.Location;[m
[32m+[m[32m        set => Bounds = new(value, Bounds.Size);[m
[32m+[m[32m    }[m
 [m
     public bool IgnoreCamera { get; set; } = false;[m
 [m
[36m@@ -122,7 +126,4 @@[m [mpublic abstract class ComponentBase : IComponent[m
         parent?.RemoveChild(this);[m
         Parent = parent;[m
     }[m
[31m-[m
[31m-    public void MoveTo(float x, float y) => Bounds = new(x, y, Bounds.Width, Bounds.Height);[m
[31m-    public void MoveTo(PointF point) => Bounds = new(point.X, point.Y, Bounds.Width, Bounds.Height);[m
 }[m
